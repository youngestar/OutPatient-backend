server:
  port: 8200
spring:
  application:
    name: outpatient-backend-gateway
  profiles:
    active: dev
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
        namespace: public
        group: DEFAULT_GROUP
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        # 认证服务路由
        - id: auth-service
          uri: lb://outpatient-backend-auth
          predicates:
            - Path=/api/auth/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                key-resolver: "#{@userKeyResolver}"
            - name: Retry
              args:
                retries: 3
                series: SERVER_ERROR

        # 管理后台服务路由
        - id: admin-service
          uri: lb://outpatient-backend-admin
          predicates:
            - Path=/api/admin/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                key-resolver: "#{@userKeyResolver}"

        # 患者服务路由（预留）
        - id: patient-service
          uri: lb://outpatient-backend-patient
          predicates:
            - Path=/api/patient/**
          filters:
            - StripPrefix=1

        # 公共服务路由
        - id: public-service
          uri: lb://outpatient-backend-auth
          predicates:
            - Path=/api/public/**
          filters:
            - StripPrefix=1

      # 全局过滤器 - 修正配置
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin
        - DedupeResponseHeader=Access-Control-Allow-Credentials
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 100
            redis-rate-limiter.burstCapacity: 200
            key-resolver: "#{@ipKeyResolver}"

  # Redis配置（Reactive版本）
  data:
    redis:
      host: localhost
      port: 6379
      database: 1
      password: 258013
      timeout: 5000
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: 5000

# Sa-Token配置（Gateway专用）
sa-token:
  token-name: satoken
  timeout: 2592000
  active-timeout: -1
  is-concurrent: true
  is-share: true
  is-log: false
  jwt-secret-key: graduation-gateway-secret-key-2025

# 日志配置
logging:
  level:
    com.graduation.gateway: DEBUG
    org.springframework.cloud.gateway: INFO
    cn.dev33.satoken: WARN